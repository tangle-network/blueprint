[package]
name = "gadget-sdk"
version = "0.1.0"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true
description = "SDK for building Blueprints and gadget on Tangle Network"
license.workspace = true


[dependencies]
elliptic-curve = { workspace = true, features = ["alloc", "sec1"] }
hex = { workspace = true }
parking_lot = { workspace = true }
rand_core = { workspace = true }
rand = { workspace = true, optional = true }
thiserror = { workspace = true }

# Keystore deps
ed25519-zebra = { workspace = true }
k256 = { workspace = true, features = ["ecdsa", "ecdsa-core", "arithmetic"] }
schnorrkel = { workspace = true }
w3f-bls = { workspace = true }

# Metrics deps
hyper = { workspace = true, features = ["http1", "server"] }
prometheus = { workspace = true }
tokio = { workspace = true, features = ["rt-multi-thread", "parking_lot"] }

# Logging deps
log = { workspace = true }
tracing = { workspace = true }

# Networking deps
async-trait = { workspace = true }
bincode = { workspace = true }
futures = { workspace = true }
gadget-core = { workspace = true, features = ["substrate"] }
gadget-common = { workspace = true, features = ["default"] }
gadget-io = { workspace = true, features = ["std"] }
serde = { workspace = true }

# Substrate
sp-core = { workspace = true, features = ["full_crypto"] }
sp-io = { workspace = true }

# Event Watchers and Handlers
backoff = { workspace = true }
subxt = { workspace = true }
tangle-subxt = { workspace = true }

# Macros
gadget-blueprint-proc-macro = { workspace = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies.libp2p]
workspace = true
features = [
  "tokio",
  "gossipsub",
  "mdns",
  "noise",
  "macros",
  "yamux",
  "tcp",
  "quic",
  "request-response",
  "cbor",
  "identify",
  "kad",
  "dcutr",
  "relay",
  "ping",
  "dns",
  "autonat"
]

# WASM-only deps
[target.'cfg(all(any(target_arch = "wasm32", target_arch = "wasm64"), target_os = "unknown"))'.dependencies]
getrandom = { workspace = true, features = ["js"] }
libp2p = { workspace = true }

[target.'cfg(not(target_family = "wasm"))'.dev-dependencies]
hyper = { workspace = true, features = ["client"] }

# [dev-dependencies]
# tangle-test-utils = { workspace = true }

[features]
default = ["std"]
std = [
  "alloc",
  "rand",
  "getrandom",
  "hex/std",
  "sp-io/std",
]
alloc = ["rand_core/alloc", "hex/alloc"]
wasm = []

# Randomness
getrandom = ["rand_core/getrandom"]
