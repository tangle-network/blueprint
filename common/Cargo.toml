[package]
name = "gadget-common"
version = "0.1.0"
edition = "2021"
description = "Common utilities for writing gadgets for Tangle blueprint"
homepage.workspace = true
license.workspace = true

[dependencies]
async-trait = { workspace = true }
auto_impl = { workspace = true }
cfg-if = { workspace = true }
futures = { workspace = true }
gadget-core = { workspace = true }
gadget-io = { workspace = true }
hex = { workspace = true }
lazy_static = { workspace = true }
libsecp256k1 = { workspace = true }
log = { workspace = true }
parking_lot = { workspace = true }
prometheus = { workspace = true }
round-based = { workspace = true, features = ["derive"] }
serde = { workspace = true, features = ["derive", "alloc"] }
serde_json = { workspace = true }
sqlx = { workspace = true, features = ["runtime-tokio-rustls", "sqlite"], optional = true }
thiserror = { workspace = true }

# Substrate
parity-scale-codec = { workspace = true, optional = true }
sp-core = { workspace = true, features = ["full_crypto"] }
sp-io = { workspace = true, features = ["disable_allocator", "disable_panic_handler", "disable_oom"] }
sp-runtime = { workspace = true, features = ["serde"] }
substrate-prometheus-endpoint = { workspace = true, optional = true }
subxt-signer = { workspace = true, features = ["subxt", "sr25519"], optional = true }
tangle-subxt = { workspace = true, optional = true }

[target.'cfg(all(any(target_arch = "wasm32", target_arch = "wasm64"), target_os = "unknown"))'.dependencies]
getrandom = { workspace = true, features = ["js"] }

[features]
default = ["substrate", "std", "tangle-testnet"]
tangle-testnet = []
tangle-mainnet = []
substrate = [
    "dep:parity-scale-codec",
    "dep:tangle-subxt",
    "dep:substrate-prometheus-endpoint",
    "dep:subxt-signer",
    "gadget-core/substrate",
]
std = [
    "dep:sqlx",
    "gadget-io/std",
    "gadget-core/std",
    "serde/std",
    "sp-io/std",
    "sp-runtime/std",
    "tangle-subxt?/std",
]
wasm = ["subxt-signer?/web", "tangle-subxt?/web"]
testing = []
