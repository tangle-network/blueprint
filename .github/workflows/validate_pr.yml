name: Validate PR

on:
  pull_request:
    branches: [main]

concurrency:
  group: rust-validation-${{ github.head_ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: full
  RUST_LOG: "gadget=trace"
  SKIP_WASM_BUILD: "true"

jobs:
  formatting:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Check Formatting
        run: cargo fmt -- --check

  linting:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - name: Install protobuf
        run: sudo apt-get install protobuf-compiler

      - name: Run Clippy
        run: cargo clippy --tests -- -D warnings

  linting-mainnet:
    name: Clippy-Mainnet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - name: Install protobuf
        run: sudo apt-get install protobuf-compiler

      - name: Run Clippy
        run: cargo clippy --tests --features=mainnet -- -D warnings

  testing:
    timeout-minutes: 120
    name: Cargo Test
    runs-on: macos-latest
    strategy:
        matrix:
            package: [gadget-core, gadget-common, zk-saas-protocol, dfns-cggmp21-protocol, threshold-bls-protocol]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install protobuf
        run: brew install protobuf

      - name: Install cargo-nextest
        run: cargo install cargo-nextest --locked

      - name: Run Tests
        run: cargo nextest run --release --nocapture --package ${{ matrix.package }}
