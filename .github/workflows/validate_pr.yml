name: Validate PR

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: rust-validation-${{ github.head_ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: full
  RUST_LOG: "gadget=trace"
  CARGO_TERM_COLOR: always

jobs:
  formatting:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Check Formatting
        run: cargo fmt -- --check

  linting:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Install protobuf
        run: sudo apt-get install protobuf-compiler

      - name: Run Clippy
        run: cargo clippy -- -D warnings

  build:
    timeout-minutes: 120
    name: cargo build
    runs-on: macos-latest
    strategy:
        matrix:
            package: [
              gadget-core,
              gadget-common,
              zk-saas-protocol,
              dfns-cggmp21-protocol,
              threshold-bls-protocol,
              zcash-frost-protocol,
              silent-shard-dkls23-ll-protocol,
            ]
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: install protobuf
        run: brew install protobuf

      - name: build
        run: cargo build --workspace --package ${{ matrix.package }}

  testing:
    timeout-minutes: 120
    name: cargo test
    runs-on: macos-latest
    strategy:
        matrix:
            package: [
              gadget-core,
              gadget-common,
              zk-saas-protocol,
              dfns-cggmp21-protocol,
              threshold-bls-protocol,
              zcash-frost-protocol,
              silent-shard-dkls23-ll-protocol,
            ]
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: install rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: stable

      - uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: install protobuf
        run: brew install protobuf

      - name: install cargo-nextest
        run: cargo install cargo-nextest --locked

      - name: tests
        if: ${{ matrix.package != 'zk-saas-protocol' }}
        run: cargo nextest run --release --nocapture --package ${{ matrix.package }}

      - name: tests (parallel enabled)
        if: ${{ matrix.package == 'zk-saas-protocol' }}
        run: cargo nextest run --features=parallel --release --nocapture --package ${{ matrix.package }}
