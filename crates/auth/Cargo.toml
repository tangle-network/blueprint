[package]
name = "blueprint-auth"
version = "0.1.0-alpha.7"
description = "Blueprint HTTP/WS Authentication"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true

[dependencies]
blueprint-std = { workspace = true }

thiserror = { workspace = true }
tower = { workspace = true, features = ["util"] }
tower-http = { workspace = true, features = ["cors", "request-id", "sensitive-headers", "trace"] }
hashbrown = { workspace = true, default-features = false, features = ["default-hasher", "inline-more"] }
tiny-keccak = { workspace = true, features = ["keccak"] }
tracing = { workspace = true }
serde = { workspace = true, features = ["derive", "alloc"] }
hex = { workspace = true, features = ["serde", "alloc"] }
base64 = { workspace = true, features = ["alloc"] }
crc32fast = { workspace = true }

k256 = { workspace = true, features = ["ecdsa", "alloc", "serde", "pem"] }
schnorrkel = { workspace = true }

axum = { workspace = true, default-features = false, features = ["json"] }
hyper-util = { workspace = true, features = ["client", "client-legacy", "tokio", "http2"] }

# Database
rocksdb = { workspace = true, features = ["lz4"] }
prost = { workspace = true, features = ["derive"] }


[dev-dependencies]
blueprint-sdk = { path = "../sdk", features = ["std"] }
serde_json = { workspace = true, features = ["alloc"] }
bytes = { workspace = true }
tower = { workspace = true, features = ["util", "timeout", "limit", "load-shed", "steer", "filter", "make"] }
tokio = { workspace = true, features = ["full"] }
axum = { workspace = true, features = ["json", "multipart", "http1", "tokio"] }
reqwest = { workspace = true, features = ["json", "multipart"] }
futures-util = { workspace = true }
http = { workspace = true }
tempfile = { workspace = true }
tracing-subscriber = { workspace = true, features = ["fmt", "env-filter", "registry"] }

[features]
default = ["std", "tracing"]
std = ["blueprint-std/std", "crc32fast/std", "k256/std", "schnorrkel/std", "base64/std", "prost/std"]
tracing = []
