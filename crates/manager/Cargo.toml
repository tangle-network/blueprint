[package]
name = "blueprint-manager"
version = "0.3.0-alpha.13"
description = "Tangle Blueprint manager and Runner"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[[bin]]
name = "blueprint-manager"
path = "src/main.rs"

[dependencies]
blueprint-core = { workspace = true, features = ["tracing"] }
blueprint-runner = { workspace = true, features = ["networking"] }
blueprint-clients = { workspace = true, features = ["std", "tangle"] }
blueprint-crypto = { workspace = true, features = ["std", "tangle-pair-signer"] }
blueprint-keystore = { workspace = true, features = ["std", "tangle"] }
blueprint-std = { workspace = true, features = ["std"] }
blueprint-auth = { workspace = true, features = ["std"] }
blueprint-manager-bridge.workspace = true

axum = { workspace = true, default-features = false, features = ["json", "tokio", "http2"] }
docktopus = { workspace = true, features = ["deploy"] }
clap = { workspace = true, features = ["derive", "wrap_help"] }
color-eyre = { workspace = true, features = ["tracing-error", "color-spantrace", "issue-url"] }
tangle-subxt = { workspace = true }
toml = { workspace = true, features = ["parse"] }
hex = { workspace = true }
tokio = { workspace = true, features = ["process", "io-util", "signal", "macros"] }
reqwest = { workspace = true }
sha2 = { workspace = true }
futures = { workspace = true }
thiserror.workspace = true
tracing = { workspace = true, features = ["log"] }
tracing-subscriber = { workspace = true, features = ["env-filter", "ansi", "tracing-log"] }
auto_impl = { workspace = true }
dynosaur = { workspace = true }
sp-core = { workspace = true }
url.workspace = true
hyper.workspace = true
hyperlocal.workspace = true
hyper-util.workspace = true
http-body-util.workspace = true
dirs.workspace = true
walkdir.workspace = true
tonic.workspace = true
tokio-stream = { workspace = true, features = ["net"] }
cloud-hypervisor-client = { workspace = true }
fatfs = { workspace = true, features = ["std"] }
nix = { workspace = true, features = ["process", "signal", "ioctl", "term", "fs"] }

# Networking
rtnetlink = { workspace = true, features = ["tokio_socket"] }
ipnet.workspace = true

# Binary extraction
cargo-dist-schema.workspace = true
tar.workspace = true
xz.workspace = true

[package.metadata.dist]
dist = false
