[package]
name = "blueprint-networking"
version = "0.1.0-alpha.13"
description = "Networking utilities for Tangle Blueprints"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[dependencies]
# Internal deps
blueprint-std = { workspace = true }
blueprint-core = { workspace = true, features = ["tracing"] }

# Core dependencies
alloy-primitives = { workspace = true }
dashmap = { workspace = true }
libp2p = { workspace = true }
tokio = { workspace = true, features = ["macros"] }
futures = { workspace = true }
bincode = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true, features = ["alloc"] }
hex = { workspace = true }
parking_lot = { workspace = true }
thiserror = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter", "fmt"] }
crossbeam-channel = { workspace = true }

# TODO: Can be optional with proper flag. Used for p2p w/ evm addresses
libsecp256k1 = { workspace = true, features = ["static-context"] }

# Crypto dependencies
blueprint-crypto = { workspace = true, features = ["k256", "hashing"] }
k256 = { workspace = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies.libp2p]
workspace = true
features = [
	"tokio",
	"gossipsub",
	"mdns",
	"noise",
	"macros",
	"yamux",
	"tcp",
	"quic",
	"request-response",
	"cbor",
	"identify",
	"kad",
	"dcutr",
	"relay",
	"ping",
	"dns",
	"autonat",
	"upnp",
	"serde",
]

[dev-dependencies]
blueprint-networking = { path = ".", features = ["testing"] }
blueprint-crypto = { path = "../crypto", features = ["sp-core"] }
blueprint-crypto-core = { path = "../crypto/core", features = ["tangle"] }
tracing-subscriber = { workspace = true }
serial_test = { workspace = true }

[features]
default = ["std", "testing"]
std = [
	"blueprint-crypto/std",
	"blueprint-std/std",
	"k256/std",
	"tokio/full",
	"serde/std",
	"serde_json/std",
	"libsecp256k1/std",
]
testing = []
