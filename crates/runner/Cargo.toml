[package]
name = "blueprint-runner"
version = "0.1.0-alpha.8"
description = "Runner for the Blueprint SDK"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[dependencies]
blueprint-core.workspace = true
blueprint-router.workspace = true
blueprint-std.workspace = true
blueprint-keystore = { workspace = true }
blueprint-crypto = { workspace = true }
futures-core.workspace = true
futures-util.workspace = true
tower.workspace = true
tokio = { workspace = true, features = ["full"] }
serde.workspace = true
tracing.workspace = true
clap = { workspace = true, features = ["derive", "env"] }
futures.workspace = true
thiserror.workspace = true
url = { workspace = true, features = ["serde"] }
dynosaur = { workspace = true }
document-features = { workspace = true }

# Networking
crossbeam-channel = { workspace = true, optional = true }
blueprint-networking = { workspace = true, optional = true }
libp2p = { workspace = true, optional = true }

# Tangle
blueprint-tangle-extra = { workspace = true, optional = true }
tangle-subxt = { workspace = true, optional = true }
k256 = { workspace = true, optional = true }
sc-keystore = { workspace = true, optional = true }

# Eigenlayer
blueprint-evm-extra = { workspace = true, optional = true }
alloy-contract = { workspace = true, optional = true }
alloy-primitives = { workspace = true, features = ["serde"], optional = true }
alloy-signer-local = { workspace = true, optional = true }
alloy-signer = { workspace = true, optional = true }
eigensdk = { workspace = true, features = [
    "client-elcontracts",
    "types",
    "utils",
    "logging",
    "client-avsregistry",
    "crypto-bls",
], optional = true }

[dev-dependencies]
blueprint-sdk = { path = "../sdk", features = ["std", "tangle"] }

[features]
default = ["std", "networking"]

#! ### Core

## Enable standard library support
std = ["blueprint-tangle-extra?/std", "blueprint-evm-extra?/std", "blueprint-keystore/std", "blueprint-std/std"]

## Enable networking support for [`BlueprintEnvironment`](crate::config::BlueprintEnvironment)
networking = ["dep:blueprint-networking", "dep:crossbeam-channel", "dep:libp2p", "blueprint-keystore/zebra"]

#! ### Protocols

## Enable [Tangle] support
##
## [Tangle]: https://tangle.tools
tangle = [
    "dep:tangle-subxt",
    "dep:blueprint-tangle-extra",
    "dep:k256",
    "blueprint-crypto/sp-core",
    "blueprint-crypto/tangle-pair-signer",
    "blueprint-keystore/tangle",
    "dep:sc-keystore",
]

## Enable [Eigenlayer] support
##
## [Eigenlayer]: https://eigenlayer.xyz
eigenlayer = [
    "dep:blueprint-evm-extra",
    "blueprint-keystore/bn254",
    "blueprint-keystore/eigenlayer",
    "dep:alloy-contract",
    "dep:alloy-primitives",
    "dep:alloy-signer-local",
    "dep:alloy-signer",
    "dep:eigensdk",
    "std",                           # TODO: keystore access requires the std feature
]

## Enable [Symbiotic] support **(CURRENTLY UNUSED)**
##
## [Symbiotic]: https://symbiotic.fi
symbiotic = []

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
