[package]
name = "blueprint-qos"
version = "0.1.0-alpha.1"
description = "Quality of Service (QoS) module for Blueprint SDK"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[dependencies]
blueprint-core = { workspace = true, features = ["tracing"] }
# blueprint-runner = { workspace = true }
blueprint-crypto = { workspace = true }
blueprint-keystore = { workspace = true }
# blueprint-clients = { workspace = true }
workspace-hack = { version = "0.1", path = "../../workspace-hack" }

thiserror = { workspace = true }
tokio = { workspace = true, features = ["rt", "sync", "time", "signal", "macros"] }
tonic = { workspace = true, features = ["transport", "codegen", "prost"] }
prost = { workspace = true, features = ["prost-derive"] }
sysinfo = { workspace = true }
rand = { workspace = true }
chrono = { workspace = true }
tracing = { workspace = true }

# Prometheus metrics
prometheus = { version = "0.13", features = ["process"] }

# OpenTelemetry
opentelemetry = { version = "0.20", features = ["metrics", "rt-tokio"] }
opentelemetry-prometheus = "0.13"
opentelemetry_sdk = { version = "0.20", features = ["metrics", "rt-tokio"] }

# HTTP server for Prometheus metrics
axum = { version = "0.6", features = ["tokio"] }
futures = { workspace = true }

# Loki logging
tracing-loki = { version = "0.2" }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-opentelemetry = "0.21"

# Grafana integration
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
reqwest = { version = "0.11", features = ["json"] }
uuid = { version = "1.4", features = ["v4"] }

[build-dependencies]
tonic-build = { workspace = true, features = ["prost"] }

[features]
default = ["std"]
std = [
    "blueprint-core/std",
    # "blueprint-runner/std",
    "blueprint-crypto/std",
    "blueprint-keystore/std",
    # "blueprint-clients/std",
]
# tangle = ["blueprint-clients/tangle"]
