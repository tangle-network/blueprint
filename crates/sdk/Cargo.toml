[package]
name = "blueprint-sdk"
version = "0.1.0-alpha.20"
description = "Blueprint SDK for building decentralized and distributed services."
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[dependencies]
# Required dependencies
blueprint-core = { workspace = true }
blueprint-router = { workspace = true }
blueprint-runner = { workspace = true }
blueprint-producers-extra = { workspace = true }
blueprint-qos = { workspace = true }
blueprint-keystore = { workspace = true }
blueprint-clients = { workspace = true }
blueprint-crypto = { workspace = true }
blueprint-std = { workspace = true }
blueprint-manager-bridge = { workspace = true, features = ["client"] }
blueprint-auth = { workspace = true }

# The keystore context is the only one that doesn't bring in extra dependencies, so we can always include it
blueprint-contexts = { workspace = true, features = ["keystore"] }
document-features = { workspace = true, features = ["default"] }
blueprint-chain-setup = { workspace = true, optional = true }

# Macros
blueprint-macros = { workspace = true, optional = true }
blueprint-context-derive = { workspace = true, optional = true }

# Tangle-specific extras
blueprint-tangle-extra = { workspace = true, optional = true }
tangle-subxt = { workspace = true, optional = true }
blueprint-crypto-tangle-pair-signer = { workspace = true, optional = true }

# Eigenlayer and EVM-specific extras
blueprint-evm-extra = { workspace = true, optional = true }
blueprint-eigenlayer-extra = { workspace = true, optional = true }
alloy = { workspace = true, optional = true, features = ["full"] }
alloy-json-abi = { workspace = true, optional = true, features = ["serde_json"] }
eigensdk = { workspace = true, optional = true, features = ["full"] }

# K, V Stores
blueprint-stores = { workspace = true, optional = true }

# Error Handling
thiserror = { workspace = true }

# Required Features for macro resolution
tokio = { workspace = true, default-features = false }

# Networking-related dependencies
blueprint-networking = { workspace = true, optional = true }

# Round-based protocol support
blueprint-networking-round-based-extension = { workspace = true, optional = true }

# Optional dependencies for testing
blueprint-testing-utils = { workspace = true, optional = true }
tempfile = { workspace = true, optional = true }

# Optional dependencies for build
blueprint-build-utils = { workspace = true, optional = true }

openssl-sys = { workspace = true, features = ["vendored"] }

[features]
default = ["std", "tracing"]

#! ### Core

## Enable standard library support
std = [
    # Core
    "blueprint-core/std",
    "blueprint-runner/std",
    "blueprint-keystore/std",
    "blueprint-contexts/std",
    "blueprint-clients/std",
    "blueprint-crypto/std",
    "blueprint-context-derive?/std",
    "blueprint-auth/std",
    # Tangle
    "tangle-subxt/std",
    # Extras
    "blueprint-tangle-extra?/std",
    "blueprint-evm-extra?/std",
    "blueprint-eigenlayer-extra?/std",
    "blueprint-chain-setup/std",
]

## Enable support for web targets
web = [
    # Tangle
    "tangle-subxt/web",
]

## Enable [tracing] support
##
## [tracing]: https://crates.io/crates/tracing
tracing = [
    "blueprint-core/tracing",
    "blueprint-router/tracing",
    "blueprint-producers-extra/tracing",
    "blueprint-tangle-extra?/tracing",
]

##! ### Protocol Support

## Enable [Tangle] support
##
## [Tangle]: https://tangle.tools
tangle = [
    "dep:blueprint-tangle-extra",
    "dep:tangle-subxt",
    "dep:blueprint-crypto-tangle-pair-signer",
    "blueprint-clients/tangle",
    "blueprint-contexts/tangle",
    "blueprint-context-derive?/tangle",
    "blueprint-testing-utils?/tangle",
    "blueprint-runner/tangle",
    "blueprint-chain-setup?/tangle",
]

## Enable EVM support
evm = [
    "dep:blueprint-evm-extra",
    "dep:alloy",
    "dep:alloy-json-abi",
    "blueprint-clients/evm",
    "blueprint-contexts/evm",
    "blueprint-context-derive?/evm",
    "blueprint-crypto-tangle-pair-signer?/evm",
    "blueprint-macros?/evm",
    "blueprint-testing-utils?/anvil",
    "blueprint-chain-setup?/anvil",
]

## Enable [Eigenlayer] support
##
## [Eigenlayer]: https://eigenlayer.xyz
eigenlayer = [
    "dep:eigensdk",
    "blueprint-contexts/eigenlayer",
    "blueprint-clients/eigenlayer",
    "blueprint-testing-utils?/eigenlayer",
    "blueprint-eigenlayer-extra",
    "evm",
]

##! ### Networking Support

## Enable networking support
networking = [
    "dep:blueprint-networking",
    "blueprint-contexts/networking",
    "blueprint-keystore/std",
    "blueprint-context-derive?/networking",
    "blueprint-runner/networking",
]

## Enable [round-based] networking capability
##
## [round-based]: https://github.com/LFDT-Lockness/round-based
round-based-compat = ["dep:blueprint-networking-round-based-extension"]

##! ### Utilities

## Enable local KV stores
local-store = ["blueprint-stores/local"]

## Enable all macros of subcrates
macros = ["dep:blueprint-macros", "dep:blueprint-context-derive", "blueprint-tangle-extra?/macros"]

## Enable build-time utilities
build = ["dep:blueprint-build-utils", "macros"]

## Enable testing utilities
testing = [
    "blueprint-networking/testing",
    "dep:blueprint-testing-utils",
    "dep:blueprint-chain-setup",
    "dep:tempfile",
    "std",
]

#! ### Extra producers

## Enable the cron job producer
cronjob = ["blueprint-producers-extra/cron"]

[package.metadata.docs.rs]
features = ["tangle", "evm", "eigenlayer", "networking", "round-based-compat", "local-store", "macros", "build", "testing", "cronjob"]
rustdoc-args = ["--cfg", "docsrs"]
