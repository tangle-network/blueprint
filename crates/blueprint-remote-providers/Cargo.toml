[package]
name = "blueprint-remote-providers"
version = "0.1.0-alpha.1"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true
documentation = "https://docs.rs/blueprint-remote-providers"

[dependencies]
# Core dependencies
anyhow.workspace = true
async-trait = "0.1"
auto_impl = "1.2"
chrono = { workspace = true, features = ["serde"] }
futures.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["full"] }
toml = "0.8"
tracing.workspace = true

# Blueprint dependencies (removed blueprint-manager to avoid cyclic dependency)
blueprint-auth = { path = "../auth" }
blueprint-keystore = { path = "../keystore" }
blueprint-pricing-engine = { path = "../pricing-engine", optional = true }

# Provider-specific dependencies
bollard = { version = "0.18", optional = true }
kube = { version = "0.90", optional = true }
k8s-openapi = { version = "0.21", features = ["v1_29"], optional = true }

# AWS SDK
aws-config = { version = "1.5", optional = true }
aws-sdk-ec2 = { version = "1.47", optional = true }
aws-sdk-eks = { version = "1.47", optional = true }
aws-sdk-autoscaling = { version = "1.47", optional = true }

# HTTP client for other cloud APIs
reqwest = { version = "0.12", features = ["json"], optional = true }

# Testing dependencies
mockall = { version = "0.13", optional = true }

# Utilities
uuid = { version = "1.10", features = ["v4", "serde"] }
libc = "0.2"

[dev-dependencies]
blueprint-core-testing-utils = { path = "../testing-utils/core" }
mockall = "0.13"
tempfile = "3.8"
tokio-test = "0.4"
wiremock = "0.6"

[features]
default = ["kubernetes"]
kubernetes = ["dep:kube", "dep:k8s-openapi"]
docker = ["dep:bollard"]
aws = ["dep:aws-config", "dep:aws-sdk-ec2", "dep:aws-sdk-autoscaling"]
aws-eks = ["aws", "dep:aws-sdk-eks"]
gcp = ["api-clients"]
azure = ["api-clients"]
api-clients = ["dep:reqwest"]
pricing = ["dep:blueprint-pricing-engine"]
testing = ["dep:mockall"]
full = ["kubernetes", "docker", "aws-eks", "gcp", "azure", "api-clients", "pricing"]

[[example]]
name = "manager_integration"
required-features = ["full"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]