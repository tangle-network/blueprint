[package]
name = "blueprint-remote-providers"
version = "0.1.0-alpha.1"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true
documentation = "https://docs.rs/blueprint-remote-providers"

[dependencies]
# Blueprint standard library
blueprint-std.workspace = true

# Core dependencies
anyhow.workspace = true
async-trait = "0.1"
auto_impl = "1.2"
chrono = { workspace = true, features = ["serde"] }
futures.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde_yaml = "0.9"
thiserror.workspace = true
tokio = { workspace = true, features = ["full"] }
toml = "0.8"
tracing.workspace = true

# Blueprint dependencies (removed blueprint-manager and blueprint-qos to avoid cyclic dependency)
blueprint-auth = { path = "../auth" }
blueprint-keystore = { path = "../keystore" }
blueprint-pricing-engine = { path = "../pricing-engine", optional = true }
parity-scale-codec = { workspace = true, features = ["derive"] }

# Provider-specific dependencies
bollard = { version = "0.18", optional = true }
kube = { version = "0.90", features = ["rustls-tls"], optional = true }
k8s-openapi = { version = "0.21", features = ["v1_29"], optional = true }

# AWS SDK
aws-config = { version = "1.5", optional = true }
aws-sdk-ec2 = { version = "1.47", optional = true }
aws-sdk-eks = { version = "1.47", optional = true }
aws-sdk-autoscaling = { version = "1.47", optional = true }

# HTTP client for cloud APIs and pricing
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }
rustls = { version = "0.23", features = ["ring"] }

# TLS and secure communication
tokio-rustls = "0.26"
chacha20poly1305 = "0.10"


# Utilities
uuid = { version = "1.10", features = ["v4", "serde"] }
libc = "0.2"
rand = "0.8"

[dev-dependencies]
blueprint-core-testing-utils = { path = "../testing-utils/core" }
mockall = "0.13"
tempfile = "3.8"
tokio-test = "0.4"
wiremock = "0.6"
serial_test = "3.0"
proptest = "1.0"
mockito = "1.0"
# Official AWS mocking library
aws-smithy-mocks-experimental = "0.2"
# For regex in wiremock matchers
regex = "1.10"
# For container-based testing
testcontainers = "0.23"
# For K8s testing
kube = { version = "0.90", features = ["runtime", "derive"] }
k8s-openapi = { version = "0.21", features = ["v1_29"] }

[features]
default = ["aws"]
aws = ["dep:aws-config", "dep:aws-sdk-ec2", "dep:aws-sdk-autoscaling"]
aws-eks = ["aws", "dep:aws-sdk-eks"]
gcp = []  # GCP support via REST API
azure = []  # Azure support via REST API
digitalocean = []  # DigitalOcean support via REST API
vultr = []  # Vultr support via REST API
kubernetes = ["dep:kube", "dep:k8s-openapi"]
docker = ["dep:bollard"]
pricing = ["dep:blueprint-pricing-engine"]
testing = []

[[example]]
name = "manager_integration"
required-features = ["aws", "kubernetes"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]