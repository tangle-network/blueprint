// proto/pricing.proto
syntax = "proto3";

package pricing_engine;

// The pricing service definition.
service PricingEngine {
  // Retrieves a signed price quote for a given blueprint.
  rpc GetPrice (GetPriceRequest) returns (GetPriceResponse);
}

// Request message for GetPrice RPC
message GetPriceRequest {
  // The blueprint ID
  uint64 blueprint_id = 1;
  // Time-to-live for service in seconds
  uint64 ttl_seconds = 2;
  // Proof of work to prevent DDOS
  bytes proof_of_work = 3;
  // Optional resource recommendations
  repeated ResourceRequirement resource_requirements = 4;
}

// Resource requirement for a specific resource type
message ResourceRequirement {
  // Resource kind (CPU, Memory, GPU, etc.)
  string kind = 1;
  // Quantity required
  uint64 count = 2;
}

// Response message for GetPrice RPC
message GetPriceResponse {
  // The quote details
  QuoteDetails quote_details = 1;
  // Signature of the hash of the body
  bytes signature = 2;
  // Operator ID
  bytes operator_id = 3;
  // Proof of work response
  bytes proof_of_work = 4;
}

// The detailed quote information
message QuoteDetails {
  // The blueprint ID
  uint64 blueprint_id = 1;
  // Time-to-live for service in seconds
  uint64 ttl_seconds = 2;
  // Total cost in USD with decimal precision
  double total_cost_rate = 3;
  // Timestamp when quote was generated
  uint64 timestamp = 4;
  // Expiry timestamp
  uint64 expiry = 5;
  // Resource pricing details
  repeated ResourcePricing resources = 6;
}

// Pricing for a specific resource type
message ResourcePricing {
  // Resource kind (CPU, Memory, GPU, etc.)
  string kind = 1;
  // Quantity of the resource
  uint64 count = 2;
  // Price per unit in USD with decimal precision (e.g., 0.00005 USD per MB)
  double price_per_unit_rate = 3;
}
